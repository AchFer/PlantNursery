<?php

namespace Proxies\__CG__\PlantBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Plant extends \PlantBundle\Entity\Plant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'id', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'plantname', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'binomialname', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'clade1', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'clade2', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'clade3', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'plantorder', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'family', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'subfamily', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'tribe', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'genus', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'species', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'description', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'wateringsandysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'frequencywateringsandysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'periodofwateringsandysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'wateringclaysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'frequencywateringclaysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'periodofwateringclaysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'photo'];
        }

        return ['__isInitialized__', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'id', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'plantname', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'binomialname', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'clade1', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'clade2', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'clade3', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'plantorder', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'family', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'subfamily', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'tribe', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'genus', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'species', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'description', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'wateringsandysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'frequencywateringsandysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'periodofwateringsandysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'wateringclaysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'frequencywateringclaysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'periodofwateringclaysoil', '' . "\0" . 'PlantBundle\\Entity\\Plant' . "\0" . 'photo'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Plant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlantname($plantname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlantname', [$plantname]);

        return parent::setPlantname($plantname);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlantname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlantname', []);

        return parent::getPlantname();
    }

    /**
     * {@inheritDoc}
     */
    public function setBinomialname($binomialname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBinomialname', [$binomialname]);

        return parent::setBinomialname($binomialname);
    }

    /**
     * {@inheritDoc}
     */
    public function getBinomialname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBinomialname', []);

        return parent::getBinomialname();
    }

    /**
     * {@inheritDoc}
     */
    public function setClade1($clade1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClade1', [$clade1]);

        return parent::setClade1($clade1);
    }

    /**
     * {@inheritDoc}
     */
    public function getClade1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClade1', []);

        return parent::getClade1();
    }

    /**
     * {@inheritDoc}
     */
    public function setClade2($clade2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClade2', [$clade2]);

        return parent::setClade2($clade2);
    }

    /**
     * {@inheritDoc}
     */
    public function getClade2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClade2', []);

        return parent::getClade2();
    }

    /**
     * {@inheritDoc}
     */
    public function setClade3($clade3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClade3', [$clade3]);

        return parent::setClade3($clade3);
    }

    /**
     * {@inheritDoc}
     */
    public function getClade3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClade3', []);

        return parent::getClade3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlantorder($plantorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlantorder', [$plantorder]);

        return parent::setPlantorder($plantorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlantorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlantorder', []);

        return parent::getPlantorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setFamily($family)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFamily', [$family]);

        return parent::setFamily($family);
    }

    /**
     * {@inheritDoc}
     */
    public function getFamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamily', []);

        return parent::getFamily();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubfamily($subfamily)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubfamily', [$subfamily]);

        return parent::setSubfamily($subfamily);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubfamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubfamily', []);

        return parent::getSubfamily();
    }

    /**
     * {@inheritDoc}
     */
    public function setTribe($tribe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTribe', [$tribe]);

        return parent::setTribe($tribe);
    }

    /**
     * {@inheritDoc}
     */
    public function getTribe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTribe', []);

        return parent::getTribe();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenus($genus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenus', [$genus]);

        return parent::setGenus($genus);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenus', []);

        return parent::getGenus();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecies($species)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecies', [$species]);

        return parent::setSpecies($species);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecies', []);

        return parent::getSpecies();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setWateringsandysoil($wateringsandysoil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWateringsandysoil', [$wateringsandysoil]);

        return parent::setWateringsandysoil($wateringsandysoil);
    }

    /**
     * {@inheritDoc}
     */
    public function getWateringsandysoil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWateringsandysoil', []);

        return parent::getWateringsandysoil();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrequencywateringsandysoil($frequencywateringsandysoil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrequencywateringsandysoil', [$frequencywateringsandysoil]);

        return parent::setFrequencywateringsandysoil($frequencywateringsandysoil);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequencywateringsandysoil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequencywateringsandysoil', []);

        return parent::getFrequencywateringsandysoil();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodofwateringsandysoil($periodofwateringsandysoil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodofwateringsandysoil', [$periodofwateringsandysoil]);

        return parent::setPeriodofwateringsandysoil($periodofwateringsandysoil);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodofwateringsandysoil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodofwateringsandysoil', []);

        return parent::getPeriodofwateringsandysoil();
    }

    /**
     * {@inheritDoc}
     */
    public function setWateringclaysoil($wateringclaysoil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWateringclaysoil', [$wateringclaysoil]);

        return parent::setWateringclaysoil($wateringclaysoil);
    }

    /**
     * {@inheritDoc}
     */
    public function getWateringclaysoil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWateringclaysoil', []);

        return parent::getWateringclaysoil();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrequencywateringclaysoil($frequencywateringclaysoil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrequencywateringclaysoil', [$frequencywateringclaysoil]);

        return parent::setFrequencywateringclaysoil($frequencywateringclaysoil);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequencywateringclaysoil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequencywateringclaysoil', []);

        return parent::getFrequencywateringclaysoil();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodofwateringclaysoil($periodofwateringclaysoil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodofwateringclaysoil', [$periodofwateringclaysoil]);

        return parent::setPeriodofwateringclaysoil($periodofwateringclaysoil);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodofwateringclaysoil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodofwateringclaysoil', []);

        return parent::getPeriodofwateringclaysoil();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function isValidClane1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValidClane1', []);

        return parent::isValidClane1();
    }

    /**
     * {@inheritDoc}
     */
    public function isValidClane2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValidClane2', []);

        return parent::isValidClane2();
    }

    /**
     * {@inheritDoc}
     */
    public function isValidClane3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValidClane3', []);

        return parent::isValidClane3();
    }

    /**
     * {@inheritDoc}
     */
    public function isValidsubfamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValidsubfamily', []);

        return parent::isValidsubfamily();
    }

}
